# Copyright (c) Citrix Systems Inc.  
# All rights reserved.
# 
# Redistribution and use in source and binary forms,
# with or without modification, are permitted provided
# that the following conditions are met:
# 
# *   Redistributions of source code must retain the above
#     copyright notice, this list of conditions and the
#     following disclaimer.
# *   Redistributions in binary form must reproduce the above
#     copyright notice, this list of conditions and the
#     following disclaimer in the documentation and/or other
#     materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

--- src/XmlRpcSerializer.cs	2016-10-06 11:44:03.528236000 +0100
+++ src/XmlRpcSerializer.cs	2016-10-06 11:45:31.773063500 +0100
@@ -1458,7 +1458,7 @@
             throw new XmlRpcInvalidXmlRpcException(parseStack.ParseType
               + " contains member with more than one name element"
               + " " + StackDump(parseStack));
-          string rpcName = nameNode.FirstChild.Value;
+          string rpcName = nameNode.FirstChild == null ? "" : nameNode.FirstChild.Value;
           if (valueNode == null)
             throw new XmlRpcInvalidXmlRpcException(parseStack.ParseType
               + " contains struct member " + rpcName + " with missing value "
@@ -1472,7 +1472,7 @@
             if (!IgnoreDuplicateMembers)
               throw new XmlRpcInvalidXmlRpcException(parseStack.ParseType
                 + " contains struct value with duplicate member "
-                + nameNode.FirstChild.Value
+                + rpcName
                 + " " + StackDump(parseStack));
             else
               continue;
